#include <bits/stdc++.h>
using namespace std;
struct trie{
    char ch;
    int we;
    vector<trie*>v;
    
    trie(char p)
    {
        ch=p;
        we=0;
        for(int i=0;i<26;i++)
        v.push_back(NULL);
    }
};

trie* root;

void insert(string str)
{
    trie* cur=root;
    
    int index=-1;
    for(int i=0;i<str.length();i++)
    {
        index=str[i]-'a';
        if(cur->v[index]==NULL)
        {
            trie* temp=new trie(str[i]);
            cur->v[index]=temp;
        }
         cur->we+=1;   //this will increase prefix of every part by +1
        cur=cur->v[index];
    }
    cur->we+=1;
}
int noofwordending(string str)
{
     trie* cur=root;
    
    for(int i=0;i<str.size();i++)
    {
        int index=str[i]-'a';
        if(cur->v[index]==NULL)
        return 0;
        
        cur=cur->v[index];
    }
    return cur->we;
}

int main() {
	// your code goes here
     root=new trie('$');
	
 	vector<string> z ={"abac","abaa","abab","aabb","aabc"};
 	for(int i=0;i<z.size();i++)
 	insert(z[i]);
    
	cout<<noofwordending("ab")<<endl;
	
	return 0;
}

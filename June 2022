// Find the largest number whoes subsequence has k digits
#include <bits/stdc++.h>
using namespace std;

int main() {
	int n;
	cin>>n;
	vector<int>arr(n,0);
	for(int i=0;i<n;i++)cin>>arr[i];
	
	
	int find;
	cin>>find;
	
	stack<int>s;
	for(int i=0;i<n;i++){
	    
	    while(!s.empty() && s.top()<arr[i] && (find - s.size()<(n-i)))
	    s.pop();
	    
	    if(s.size()<find)
	    s.push(arr[i]);
	  
	}
	int ans=0;
	stack<int>rev;
	while(!s.empty()){
	    rev.push(s.top());
	    s.pop();
	}
	while(!rev.empty()){
	    ans=(ans*10)+rev.top();
	    rev.pop();
	}
	cout<<ans<<endl;
	
}

#Stock Span 

for(int i=0;i<n;i++){
  int cur=1;
  while(!s.empty() &&  v[i-current]<v[i]){
  cur+=v[i-current];
  }
 ans[i]=current;
}





